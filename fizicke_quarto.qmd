---
title: "Forensis dokument - Fizičke Osobe"
format: 
  html:
    theme: "cosmo"
    highlight-style: "github"
    toc: true
    toc-depth: 2
    self-contained: true
params:
  oib: "18710011268" # YAML file pregazi ovaj broj u app
  ime_prezime: "Matija MatiĆ"
---

```{r setup, include=FALSE}

library(shiny)
library(bslib)
library(DT)
library(httr)
library(jsonlite)
library(data.table)
library(mongolite)
library(shinycssloaders)
library(quarto)
library(RMySQL)
library(stringr)

# Učitavanje zasebnih skripti
source("functions.R")
source("functions_quarto.R")
source("sifrarnik.R")

# Postavljanje globalnih opcija za prikaz koda i upozorenja
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)

# parametar 'oib' iz Quarto dokumenta
oib <- params$oib
ime_prezime <- params$ime_prezime
```


Prikazuju se podaci za: **OIB: `r params$oib`** i **Ime i Prezime: `r params$ime_prezime`**.

U nastavku su prikazani: poslovne funkcije u poduzećima; podaci iz zemljišnih knjiga RH, Republike Srpske i Federacije te baza plovila RH.


## Poslovne funkcije u poduzećima
```{r poslovne funkcije}

# Poziv funkcije s primjerom OIB-a
poslovneFunk_data <- poslovne_funkcije(oib)

# Prikaz rezultata kao datatable
# Provjeri ima li podataka
if (nrow(poslovneFunk_data) == 0) {
  cat("Nema rezultata o poslovnim funkcijama u poduzećima")
} else {
  # Prikaz rezultata u tablici
  datatable(poslovneFunk_data, options = list(dom = 't', paging = FALSE, ordering = FALSE), rownames = FALSE)
}
```

## Zemljišne knjige RH po oib-u
```{r zkrh oib}
# Učitajte podatke iz zemljišnih knjiga prema OIB-u
zkrh_data <- zkrh(oib, part = 0)

if (nrow(zkrh_data) == 0) {
  cat(paste("Nema rezultata u zemljišnim knjigama"))
} else {
  # Dohvaćanje dokumenata iz MongoDB-a
  mongo_data <- mongoDB(zkrh_data$id, collection = collection_name, db = db_name, url = db_url)

  # Spajanje podataka
  final_data <- spoji_podatke(zkrh_data, mongo_data)

  # Ažuriranje URL-a
  base_url <- "https://oss.uredjenazemlja.hr/oss/public/reports/ldb-extract/"
  final_data[, fileUrl := ifelse(is.na(fileUrl), NA_character_, paste0(base_url, fileUrl))]

  # Odabir potrebnih varijabli i promjena imena stupaca
  final_data <- final_data[, .(id, type, unit, institution, book, status, burden, fileUrl)]
  setnames(final_data, old = c("id", "type", "unit", "institution", "book", "status", "burden", "fileUrl"),
           new = c("ID", "Vrsta knjige", "Broj zemljišta (kat. čestice)", "Općinski sud / ZK odjel", "Glavna knjiga", "Status", "Teret", "Link"))

  # Prikaz rezultata koristeći odgovarajući template ovisno o broju redaka
  if (nrow(final_data) > 10) {
    DT_template_ZKRH(final_data, fixedHeader = FALSE)
  } else {
    DT_template_ZKRH_simple(final_data)
  }
}


```

## Zemljišne knjige RH po imenu i prezimenu
```{r zkrh ime_prezime}

# Učitajte podatke iz zemljišnih knjiga prema OIB-u
zkrh_data <- zkrh(ime_prezime, part = 0)

if (nrow(zkrh_data) == 0) {
  cat(paste("Nema rezultata u zemljišnim knjigama"))
} else {
  # Dohvaćanje dokumenata iz MongoDB-a
  mongo_data <- mongoDB(zkrh_data$id, collection = collection_name, db = db_name, url = db_url)

  # Spajanje podataka
  final_data <- spoji_podatke(zkrh_data, mongo_data)

  # Ažuriranje URL-a
  base_url <- "https://oss.uredjenazemlja.hr/oss/public/reports/ldb-extract/"
  final_data[, fileUrl := ifelse(is.na(fileUrl), NA_character_, paste0(base_url, fileUrl))]

  # Odabir potrebnih varijabli i promjena imena stupaca
  final_data <- final_data[, .(id, type, unit, institution, book, status, burden, fileUrl)]
  setnames(final_data, old = c("id", "type", "unit", "institution", "book", "status", "burden", "fileUrl"),
           new = c("ID", "Vrsta knjige", "Broj zemljišta (kat. čestice)", "Općinski sud / ZK odjel", "Glavna knjiga", "Status", "Teret", "Link"))

  # Prikaz rezultata koristeći odgovarajući template ovisno o broju redaka
  if (nrow(final_data) > 10) {
    DT_template_ZKRH(final_data, fixedHeader = FALSE)
  } else {
    DT_template_ZKRH_simple(final_data)
  }
}

```

## Plovila RH po imenu i prezimenu
```{r plovila ime_prezime}

# Dohvaćanje rezultata pretrage iz baze podataka za ime_prezime
plovila_data <- loadData_plovila(ime_prezime)

if (nrow(plovila_data) == 0) {
  cat(paste("Nema rezultata u registru plovila."))
} else {
  final_plovila <- plovila_data
  
  # Prikaz rezultata koristeći odgovarajući template ovisno o broju redaka
  if (nrow(final_plovila) > 10) {
    DT_template_ZKBIH_plovila(final_plovila, filename_prefix = "Plovila_")
  } else {
    DT_template_ZKBIH_plovila_simple(final_plovila, filename_prefix = "Plovila_")
  }
}

```

## Zemljišne knjige RS po imenu i prezimenu
```{r zkrs ime_prezime}

zkrs_data <- zkrs(naziv = ime_prezime)

if (nrow(zkrs_data) == 0) {
  cat(paste("Nema rezultata pretrage u zemljišnim knjigama RS"))
} else {
  # Prikaz rezultata koristeći odgovarajući template ovisno o broju redaka
  if (nrow(zkrs_data) > 10) {
    DT_template_ZKBIH_plovila(zkrs_data, filename_prefix = "ZKRS_")
  } else {
    DT_template_ZKBIH_plovila_simple(zkrs_data, filename_prefix = "ZKRS_")
  }
}

```

## Zemljišne knjige Federacija po imenu i prezimenu
```{r zkF ime_prezime}

# Dohvaćanje rezultata pretrage iz baze podataka za zemljišne knjige Federacija
zkrs_data <- zkrs(naziv = ime_prezime, table = "zk_f_vlasnici")

if (nrow(zkrs_data) == 0) {
  cat(paste("Nema rezultata pretrage u zemljišnim knjigama Federacija"))
} else {
  # Prikaz rezultata koristeći odgovarajući template ovisno o broju redaka
  if (nrow(zkrs_data) > 10) {
    DT_template_ZKBIH_plovila(zkrs_data, filename_prefix = "ZKFed_")
  } else {
    DT_template_ZKBIH_plovila_simple(zkrs_data, filename_prefix = "ZKFed_")
  }
}

```
