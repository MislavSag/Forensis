---
title: "Forensis dokument - Fizičke Osobe"
format: 
  html:
    theme: "cosmo"
    highlight-style: "github"
    toc: true
    toc-depth: 2
    self-contained: true
params:
  oib: "18710011268" # YAML file pregazi ovaj broj u app
  ime_prezime: "Matija Matić"
---

```{r setup, include=FALSE}

library(shiny)
library(bslib)
library(DT)
library(httr)
library(jsonlite)
library(data.table)
library(mongolite)
library(shinycssloaders)
library(quarto)
library(RMySQL)
library(stringr)

# Učitavanje zasebnih skripti
source("functions.R")
source("sifrarnik.R")

# Postavljanje globalnih opcija za prikaz koda i upozorenja
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)

# parametar 'oib' iz Quarto dokumenta
oib <- params$oib
ime_prezime <- params$ime_prezime
```


Prikazuju se podaci za: **OIB: `r params$oib`** i **Ime i Prezime: `r params$ime_prezime`**.

U nastavku su prikazani: status zdravstvenog osiguranja; poslovne funkcije u poduzećima; podaci iz zemljišnih knjiga RH, Republike Srpske i Federacije te baza plovila RH.

## Status zdravstvenog osiguranja

```{r zdrav}

# Dohvati podatke o osiguranju
osig_data <- zdravstveno(oib)

# Provjeri je li osig_data prazan
if (nrow(osig_data) == 0) {
  cat("Nema rezultata o zdravstvenom osiguranju")
} else {
  # Pretvori osig_data i kategorija u data.table format
  setDT(osig_data)
  setDT(kategorija)

  # Spoji osig_data s kategorija na osnovi šifre kategorije
  osig_data <- merge(osig_data, kategorija, by.x = "kategorija", by.y = "Sifra", all.x = TRUE, sort = FALSE)

  # Zamijeni šifre s opisima, ostavi šifru ako je opis NA
  osig_data[, kategorija := ifelse(is.na(oznaka_kategorija), kategorija, oznaka_kategorija)]

  # Ukloni privremeni stupac oznaka
  osig_data[, oznaka_kategorija := NULL]

  # Zadrži samo željene stupce
  osig_data <- osig_data[, .(oib, mbo, kategorija, podrucnaSluzba, dopunskoHzzo)]

  # Prikaz rezultata u tablici koristeći DT paket za prikaz
  datatable(osig_data, options = list(dom = 't', paging = FALSE, ordering = FALSE), rownames = FALSE)
}
  

```

## Poslovne funkcije u poduzećima
```{r poslovne funkcije}

# Poziv funkcije s primjerom OIB-a
poslovneFunk_data <- poslovne_funkcije(oib)

# Prikaz rezultata kao datatable
# Provjeri ima li podataka
if (nrow(poslovneFunk_data) == 0) {
  cat("Nema rezultata o poslovnim funkcijama u poduzećima")
} else {
  # Prikaz rezultata u tablici
  datatable(poslovneFunk_data, options = list(dom = 't', paging = FALSE, ordering = FALSE), rownames = FALSE)
}
```

## Zemljišne knjige RH po oib-u
```{r zkrh oib}

# Učitajte podatke iz zemljišnih knjiga prema OIB-u
zkrh_data <- zkrh(oib, part = 0)
if (nrow(zkrh_data) == 0) {
  cat(paste("Nema rezultata u zemljišnim knjigama"))
} else {
  # Dohvaćanje dokumenata iz MongoDB-a
  mongo_data <- mongoDB(zkrh_data$id, collection = collection_name, db = db_name, url = db_url)

  # Spajanje podataka
  final_data <- spoji_podatke(zkrh_data, mongo_data)

  # Ažuriranje URL-a
  base_url <- "https://oss.uredjenazemlja.hr/oss/public/reports/ldb-extract/"
  final_data[, fileUrl := ifelse(is.na(fileUrl), NA_character_, paste0(base_url, fileUrl))]

  # Odabir potrebnih varijabli i promjena imena stupaca
  final_data <- final_data[, .(id, type, unit, institution, book, status, burden, fileUrl)]
  setnames(final_data, old = c("id", "type", "unit", "institution", "book", "status", "burden", "fileUrl"),
           new = c("ID", "Vrsta knjige", "Broj zemljišta (kat. čestice)", "Općinski sud / ZK odjel", "Glavna knjiga", "Status", "Teret", "Link"))

  # Prikaz rezultata - %%% STARO %%%
  # datatable(final_data, escape = FALSE, options = list(
  #   pageLength = 5,
  #   columnDefs = list(
  #     list(
  #       targets = ncol(final_data),  # Indeks stupca 'Link'
  #       render = JS(
  #         "function(data, type, row, meta) {",
  #         "return type === 'display' && data ? '<a href=\"' + data + '\" target=\"_blank\">Open</a>' : data;",
  #         "}"
  #       )
  #     )
  #   )
  # ))
  
  # Prikaz rezultata koristeći funkciju DT_template_ZKRH
  DT_template_ZKRH(final_data, fixedHeader = FALSE)

}

```

## Zemljišne knjige RH po imenu i prezimenu
```{r zkrh ime_prezime}

# Učitajte podatke iz zemljišnih knjiga prema OIB-u
zkrh_data <- zkrh(ime_prezime, part = 0)
if (nrow(zkrh_data) == 0) {
  cat(paste("Nema rezultata u zemljišnim knjigama"))
} else {
  # Dohvaćanje dokumenata iz MongoDB-a
  mongo_data <- mongoDB(zkrh_data$id, collection = collection_name, db = db_name, url = db_url)

  # Spajanje podataka
  final_data <- spoji_podatke(zkrh_data, mongo_data)

  # Ažuriranje URL-a
  base_url <- "https://oss.uredjenazemlja.hr/oss/public/reports/ldb-extract/"
  final_data[, fileUrl := ifelse(is.na(fileUrl), NA_character_, paste0(base_url, fileUrl))]

  # Odabir potrebnih varijabli i promjena imena stupaca
  final_data <- final_data[, .(id, type, unit, institution, book, status, burden, fileUrl)]
  setnames(final_data, old = c("id", "type", "unit", "institution", "book", "status", "burden", "fileUrl"),
           new = c("ID", "Vrsta knjige", "Broj zemljišta (kat. čestice)", "Općinski sud / ZK odjel", "Glavna knjiga", "Status", "Teret", "Link"))

#   # Prikaz rezultata - %%% STARO %%%
#   datatable(final_data, escape = FALSE, options = list(
#     pageLength = 5,
#     columnDefs = list(
#       list(
#         targets = ncol(final_data),  # Indeks stupca 'Link'
#         render = JS(
#           "function(data, type, row, meta) {",
#           "return type === 'display' && data ? '<a href=\"' + data + '\" target=\"_blank\">Open</a>' : data;",
#           "}"
#         )
#       )
#     )
#   ))

  # Prikaz rezultata koristeći funkciju DT_template_ZKRH
  DT_template_ZKRH(final_data, fixedHeader = FALSE)
    
}
  


```

## Plovila RH po imenu i prezimenu
```{r plovila ime_prezime}

# Dohvaćanje rezultata pretrage iz baze podataka za plovila
plovila_data <- loadData_plovila(ime_prezime)
if (nrow(plovila_data) == 0) {
  cat(paste("Nema rezultata u registru plovila."))
} else {
  final_plovila <- plovila_data

#   # Prikaz rezultata %%% STARO %%%
#   datatable(final_plovila, escape = FALSE, options = list(
#     pageLength = 5,
#     columnDefs = list(
#       list(
#         targets = "_all",
#         render = JS(
#           "function(data, type, row, meta) {",
#           "return type === 'display' && data ? data : data;",
#           "}"
#         )
#       )
#     )
#   ))

  # Prikaz rezultata koristeći funkciju DT_template_ZKBIH_plovila
  DT_template_ZKBIH_plovila(final_plovila, fixedHeader = FALSE)
}

```

## Zemljišne knjige RS po imenu i prezimenu
```{r zkrs ime_prezime}

# Dohvaćanje rezultata pretrage iz baze podataka za zemljišne knjige RS
zkrs_data <- zkrs(naziv = ime_prezime)
if (nrow(zkrs_data) == 0) {
  cat(paste("Nema rezultata pretrage u zemljišnim knjigama RS"))
} else {
  # # Prikaz rezultata
  # datatable(zkrs_data, escape = FALSE, options = list(
  #   pageLength = 5,
  #   columnDefs = list(
  #     list(
  #       targets = "_all",
  #       render = JS(
  #         "function(data, type, row, meta) {",
  #         "return type === 'display' && data ? data : data;",
  #         "}"
  #       )
  #     )
  #   )
  # ))
  
  # Prikaz rezultata koristeći funkciju DT_template_ZKBIH_plovila
  DT_template_ZKBIH_plovila(zkrs_data, fixedHeader = FALSE)
}
```

## Zemljišne knjige Federacija po imenu i prezimenu
```{r zkF ime_prezime}

# Dohvaćanje rezultata pretrage iz baze podataka za zemljišne knjige Federacija
zkf_data <- zkrs(naziv = ime_prezime, table = "zk_f_vlasnici")
if (nrow(zkf_data) == 0) {
  cat(paste("Nema rezultata pretrage u zemljišnim knjigama RS"))
} else {
  # # Prikaz rezultata
  # datatable(zkf_data, escape = FALSE, options = list(
  #   pageLength = 5,
  #   columnDefs = list(
  #     list(
  #       targets = "_all",
  #       render = JS(
  #         "function(data, type, row, meta) {",
  #         "return type === 'display' && data ? data : data;",
  #         "}"
  #       )
  #     )
  #   )
  # ))
  
  # Prikaz rezultata koristeći funkciju DT_template_ZKBIH_plovila
  DT_template_ZKBIH_plovila(zkf_data, fixedHeader = FALSE)
}
```

