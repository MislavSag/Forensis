---
title: "Forensis dokument - Pravne Osobe"
format: 
  html:
    theme: "cosmo"
    highlight-style: "github"
    toc: true
    toc-depth: 2
    self-contained: true
params:
  oib: "12028724450" # YAML file pregazi ovaj broj u app ##02573674713, 12028724450
---

```{r setup, include=FALSE}
library(shiny)
library(bslib)
library(DT)
library(httr)
library(jsonlite)
library(data.table)
library(mongolite)
library(shinycssloaders)
library(quarto)
library(RMySQL)
library(stringr)

# Učitavanje zasebnih skripti
source("functions.R")

# print(Sys.getenv("SUDREG_API_USER"))

# Postavljanje globalnih opcija za prikaz koda i upozorenja
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)

# parametar 'oib' iz Quarto dokumenta
oib <- params$oib

# ove funkcjije vuku podatke - definirane su u skripti functions
data <- pravne_osobe_API(oib)
tablice <- prikazi_podatke_pravne_osobe(data)

# naziv ću spremiti kao skraćenu tvrtku
naziv <- tablice$tvrtka$Skracena_Tvrtka[1]
```

Prikazuju se podaci za: **OIB: `r params$oib`**.
Koristi se skraćeni naziv tvrtke: **`r naziv`**.

U nastavku su prikazani: detaljni podaci sa sudskog registra za pravnu osobu; podaci iz zemljišnih knjiga RH, Republike Srpske i Federacije; baza plovila RH.

## Opći podaci - Sudski registar

```{r opci_podaci}

if (!is.null(tablice$opci_podaci)) {
  tablice$opci_podaci$Vrijednost[c(16, 17)] <- format(as.Date(tablice$opci_podaci$Vrijednost[c(16, 17)], "%Y-%m-%dT%H:%M:%S"), "%d-%m-%Y")
  datatable(tablice$opci_podaci, options = list(pageLength = 25, dom = 't', paging = FALSE, ordering = FALSE), rownames = FALSE)
}

```

## Tvrtka

```{r tvrtka}
if (!is.null(tablice$tvrtka)) {
  datatable(tablice$tvrtka, options = list(pageLength = 5, dom = 't', paging = FALSE, ordering = FALSE), rownames = FALSE)
}
```

## Sjedište

```{r sjediste}

if (!is.null(tablice$sjediste)) {
  # Pretvori tablicu u data.table za lakšu manipulaciju
  sjediste_data <- as.data.table(tablice$sjediste)
  
  # Provjeri postoji li stupac 'kucni_podbroj'
  if ("kucni_podbroj" %in% names(sjediste_data)) {
    # Ako stupac postoji, zadrži sve potrebne stupce uključujući 'kucni_podbroj'
    sjediste_osnovno <- sjediste_data[, .(naziv_zupanije, naziv_opcine, naziv_naselja, ulica, kucni_broj, kucni_podbroj)]
  } else {
    # Ako stupac ne postoji, zadrži sve potrebne stupce bez 'kucni_podbroj'
    sjediste_osnovno <- sjediste_data[, .(naziv_zupanije, naziv_opcine, naziv_naselja, ulica, kucni_broj)]
  }
  
  # Prikaz u datatable
  datatable(sjediste_osnovno, options = list(pageLength = 5, dom = 't', paging = FALSE, ordering = FALSE), rownames = FALSE)
}

```

## Email adrese

```{r email}

if (!is.null(tablice$email_adrese) && nrow(tablice$email_adrese) > 0) {
  # Ako tablica email_adrese nije NULL i ima barem jedan redak
  if ("adresa" %in% names(tablice$email_adrese)) {
    # Ako stupac 'adresa' postoji, prikaži ga
    datatable(tablice$email_adrese["adresa"], options = list(pageLength = 5, dom = 't', paging = FALSE, ordering = FALSE), rownames = FALSE)
  } else {
    # Ako stupac 'adresa' ne postoji, prikaži praznu tablicu s porukom
    datatable(data.frame(Poruka = "Nema dostupnih email adresa"), options = list(pageLength = 1, dom = 't', paging = FALSE, ordering = FALSE), rownames = FALSE)
  }
} else {
  # Ako tablica email_adrese nema redaka, prikaži praznu tablicu s porukom
  datatable(data.frame(Poruka = "Nema dostupnih email adresa"), options = list(pageLength = 1, dom = 't', paging = FALSE, ordering = FALSE), rownames = FALSE)
}

```

## Predmet poslovanja

```{r poslovanje}

if (!is.null(tablice$predmeti_poslovanja) && "djelatnost_tekst" %in% names(tablice$predmeti_poslovanja)) {
  # Pretvori tablicu u data.table
  predmeti_poslovanja <- as.data.table(tablice$predmeti_poslovanja)

  # Zadrži samo stupac 'djelatnost_tekst' i ukloni sve redove s NA vrijednostima
  predmeti_osnovno <- predmeti_poslovanja[!is.na(djelatnost_tekst), .(djelatnost_tekst)]

  # Prikaz u datatable
  if (nrow(predmeti_osnovno) > 0) {
    datatable(predmeti_osnovno, options = list(pageLength = 5, dom = 'p', paging = TRUE, ordering = FALSE), rownames = FALSE)
  } else {
    # Ako nema redaka nakon uklanjanja NA, prikaži poruku
    datatable(data.frame(Poruka = "Nema dostupnih predmeta poslovanja"), options = list(pageLength = 1, dom = 't', paging = FALSE, ordering = FALSE), rownames = FALSE)
  }
} else {
  # Ako ne postoje podaci, prikaži poruku
  datatable(data.frame(Poruka = "Nema dostupnih predmeta poslovanja"), options = list(pageLength = 1, dom = 't', paging = FALSE, ordering = FALSE), rownames = FALSE)
}


```

## Temeljni kapital

```{r}

if (!is.null(tablice$temeljni_kapitali)) {
  datatable(tablice$temeljni_kapitali, options = list(pageLength = 5, dom = 't', paging = FALSE, ordering = FALSE), rownames = FALSE)
}

```

## Godišnji financijski izvještaji (GFI)

```{r}

if (!is.null(tablice$gfi)) {
  # Pretvori tablicu u data.table
  gfi_data <- as.data.table(tablice$gfi)

  # Filtriraj rezultate tako da prikažeš samo godine > 2019
  gfi_filtered <- gfi_data[godina_izvjestaja > 2019, .(vrsta_dokumenta, godina_izvjestaja, datum_dostave)]

  # Konvertiraj 'datum_dostave' u format 'dan-mjesec-godina' bez vremena
  gfi_filtered[, datum_dostave := format(as.Date(datum_dostave, "%Y-%m-%dT%H:%M:%S"), "%d-%m-%Y")]

  # Ukloni duplikate prema prva dva stupca ('vrsta_dokumenta' i 'godina_izvjestaja')
  gfi_unique <- gfi_filtered[!duplicated(gfi_filtered[, .(vrsta_dokumenta, godina_izvjestaja)]), ]

  # Prikaz u datatable
  datatable(gfi_unique, options = list(pageLength = 10, dom = 't', paging = FALSE, ordering = FALSE), rownames = FALSE)
}

```

## Zemljišne knjige RH po oib-u
```{r zkrh oib}

# Učitajte podatke iz zemljišnih knjiga prema OIB-u
zkrh_data <- zkrh(oib, part = 0)
if (nrow(zkrh_data) == 0) {
  cat(paste("Nema rezultata u zemljišnim knjigama"))
} else {
  # Dohvaćanje dokumenata iz MongoDB-a
  mongo_data <- mongoDB(zkrh_data$id, collection = collection_name, db = db_name, url = db_url)

  # Spajanje podataka
  final_data <- spoji_podatke(zkrh_data, mongo_data)

  # Ažuriranje URL-a
  base_url <- "https://oss.uredjenazemlja.hr/oss/public/reports/ldb-extract/"
  final_data[, fileUrl := ifelse(is.na(fileUrl), NA_character_, paste0(base_url, fileUrl))]

  # Odabir potrebnih varijabli i promjena imena stupaca
  final_data <- final_data[, .(id, type, unit, institution, book, status, burden, fileUrl)]
  setnames(final_data, old = c("id", "type", "unit", "institution", "book", "status", "burden", "fileUrl"),
           new = c("ID", "Vrsta knjige", "Broj zemljišta (kat. čestice)", "Općinski sud / ZK odjel", "Glavna knjiga", "Status", "Teret", "Link"))

  # Prikaz rezultata koristeći funkciju DT_template_ZKRH
  DT_template_ZKRH(final_data, fixedHeader = FALSE)
}
```

## Zemljišne knjige RH po nazivu
```{r zkrh naziv}

# Učitajte podatke iz zemljišnih knjiga prema OIB-u
zkrh_data <- zkrh(naziv, part = 0)
if (nrow(zkrh_data) == 0) {
  cat(paste("Nema rezultata u zemljišnim knjigama"))
} else {
  # Dohvaćanje dokumenata iz MongoDB-a
  mongo_data <- mongoDB(zkrh_data$id, collection = collection_name, db = db_name, url = db_url)

  # Spajanje podataka
  final_data <- spoji_podatke(zkrh_data, mongo_data)

  # Ažuriranje URL-a
  base_url <- "https://oss.uredjenazemlja.hr/oss/public/reports/ldb-extract/"
  final_data[, fileUrl := ifelse(is.na(fileUrl), NA_character_, paste0(base_url, fileUrl))]

  # Odabir potrebnih varijabli i promjena imena stupaca
  final_data <- final_data[, .(id, type, unit, institution, book, status, burden, fileUrl)]
  setnames(final_data, old = c("id", "type", "unit", "institution", "book", "status", "burden", "fileUrl"),
           new = c("ID", "Vrsta knjige", "Broj zemljišta (kat. čestice)", "Općinski sud / ZK odjel", "Glavna knjiga", "Status", "Teret", "Link"))

  # Prikaz rezultata koristeći funkciju DT_template_ZKRH
  DT_template_ZKRH(final_data, fixedHeader = FALSE)
}

```

## Plovila RH po nazivu
```{r plovila naziv}

# Dohvaćanje rezultata pretrage iz baze podataka za plovila
plovila_data <- loadData_plovila(naziv)
if (nrow(plovila_data) == 0) {
  cat(paste("Nema rezultata u registru plovila."))
} else {
  final_plovila <- plovila_data
  # Prikaz rezultata koristeći funkciju DT_template_ZKBIH_plovila
  DT_template_ZKBIH_plovila(zkrs_data, fixedHeader = FALSE)
}

```

## Zemljišne knjige RS po nazivu
```{r zkrs naziv}

# Dohvaćanje rezultata pretrage iz baze podataka za zemljišne knjige RS
zkrs_data <- zkrs(naziv = naziv)
if (nrow(zkrs_data) == 0) {
  cat(paste("Nema rezultata pretrage u zemljišnim knjigama RS"))
} else {
  # Prikaz rezultata koristeći funkciju DT_template_ZKBIH_plovila
  DT_template_ZKBIH_plovila(zkrs_data, fixedHeader = FALSE)
}
```

## Zemljišne knjige Federacija po nazivu
```{r zkF naziv}

# Dohvaćanje rezultata pretrage iz baze podataka za zemljišne knjige Federacija
zkrs_data <- zkrs(naziv = naziv, table = "zk_f_vlasnici")
if (nrow(zkrs_data) == 0) {
  cat(paste("Nema rezultata pretrage u zemljišnim knjigama RS"))
} else {
  # Prikaz rezultata koristeći funkciju DT_template_ZKBIH_plovila
  DT_template_ZKBIH_plovila(zkrs_data, fixedHeader = FALSE)
}
```
